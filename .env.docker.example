# ==============================================================================
# DOCKER ENVIRONMENT CONFIGURATION TEMPLATE
# ==============================================================================
# IMPORTANT: Copy this file to .env.docker and replace all placeholder values
# with actual secrets before running docker-compose.
#
# Command: cp .env.docker.example .env.docker
#
# NEVER commit .env.docker to version control - it contains sensitive secrets!
# ==============================================================================

# ------------------------------------------------------------------------------
# PostgreSQL Database Configuration
# ------------------------------------------------------------------------------
# Database credentials used by PostgreSQL container
POSTGRES_USER=postgres
POSTGRES_PASSWORD=change_me_to_secure_password
POSTGRES_DB=school_mgmt

# ------------------------------------------------------------------------------
# Backend Application Configuration
# ------------------------------------------------------------------------------
# Port the backend Express server listens on (inside container)
PORT=5007

# ------------------------------------------------------------------------------
# JWT and Token Secrets
# ------------------------------------------------------------------------------
# CRITICAL: Generate strong random secrets for production!
# Use: openssl rand -base64 32
# Or: node -e "console.log(require('crypto').randomBytes(32).toString('base64'))"
#
# Each secret MUST be unique and different from each other

# JWT Access Token Secret - Used for short-lived authentication tokens (15 min)
JWT_ACCESS_TOKEN_SECRET=change_me_generate_random_32_byte_secret

# JWT Refresh Token Secret - Used for refresh tokens (8 hours)
JWT_REFRESH_TOKEN_SECRET=change_me_generate_different_32_byte_secret

# CSRF Token Secret - Used for CSRF protection
CSRF_TOKEN_SECRET=change_me_generate_another_32_byte_secret

# Email Verification Token Secret - Used for email verification links (5 hours)
EMAIL_VERIFICATION_TOKEN_SECRET=change_me_generate_unique_32_byte_secret

# Password Setup Token Secret - Used for password setup/reset links (5 min)
PASSWORD_SETUP_TOKEN_SECRET=change_me_generate_final_32_byte_secret

# ------------------------------------------------------------------------------
# Token Expiration Times (in milliseconds)
# ------------------------------------------------------------------------------
# Access token: 15 minutes (900000 ms)
JWT_ACCESS_TOKEN_TIME_IN_MS=900000

# Refresh token: 8 hours (28800000 ms)
JWT_REFRESH_TOKEN_TIME_IN_MS=28800000

# CSRF token: ~15.8 minutes (950000 ms)
CSRF_TOKEN_TIME_IN_MS=950000

# Email verification: 5 hours (18000000 ms)
EMAIL_VERIFICATION_TOKEN_TIME_IN_MS=18000000

# Password setup: 5 minutes (300000 ms)
PASSWORD_SETUP_TOKEN_TIME_IN_MS=300000

# ------------------------------------------------------------------------------
# Application URLs
# ------------------------------------------------------------------------------
# Frontend URL (where the React app is accessible)
UI_URL=http://localhost:5173

# Backend API URL (where the Express API is accessible)
# NOTE: For docker-compose, this is the external URL for the backend
API_URL=http://localhost:5007

# Cookie domain for authentication cookies
COOKIE_DOMAIN=localhost

# ------------------------------------------------------------------------------
# Environment Mode
# ------------------------------------------------------------------------------
# Options: development, production, test
NODE_ENV=development

# ------------------------------------------------------------------------------
# Email Service Configuration
# ------------------------------------------------------------------------------
# Email address that appears in "From" field
# Example: noreply@yourschool.edu
MAIL_FROM_USER=change_me_your_email@example.com

# Resend API Key for sending emails
# Get your API key from: https://resend.com/api-keys
RESEND_API_KEY=change_me_your_resend_api_key_here

# ------------------------------------------------------------------------------
# Frontend Configuration
# ------------------------------------------------------------------------------
# URL the frontend uses to call the backend API
# NOTE: Port 5008 is the exposed port from docker-compose (maps to container port 5007)
VITE_API_URL=http://localhost:5008

# Application name displayed in the frontend
VITE_APP_NAME=Student Management System
