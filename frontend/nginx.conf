# ==============================================================================
# Nginx Configuration for Frontend (Non-Root User)
# ==============================================================================
# This configuration runs as a non-root user (nginx:nginx UID 1001)
# and includes security headers, caching, and compression
# ==============================================================================

# Required for non-root user execution
# This disables the master process, allowing nginx to run without privilege escalation
master_process off;

# PID file location (must be writable by non-root user)
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging (writable by non-root user)
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    server {
        listen 5173;
        server_name localhost;

        # Root directory for static files
        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Static file caching
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # SPA routing - serve index.html for all routes
        location / {
            try_files $uri $uri/ /index.html;

            # No caching for HTML files (SPA needs fresh index.html)
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # Proxy API requests to backend
        location /api {
            proxy_pass http://backend:5007;
            proxy_http_version 1.1;

            # Proxy headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Proxy timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Disable proxy buffering for real-time responses
            proxy_buffering off;
            proxy_cache_bypass $http_upgrade;
        }

        # Health check endpoint (optional, serves frontend health)
        location /health {
            access_log off;
            return 200 "Frontend healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
